/*
 * Netherlands city temperature API
 * Specification of API to retrieve temperature for cities within the Netherlands.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * InlineResponse200
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-15T08:08:39.304Z[GMT]")
public class InlineResponse200 {
  @SerializedName("time")
  private OffsetDateTime time = null;

  @SerializedName("temperature")
  private BigDecimal temperature = null;

  public InlineResponse200 time(OffsetDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Timestamp at which this temperature was measured
   * @return time
  **/
  @Schema(description = "Timestamp at which this temperature was measured")
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = time;
  }

  public InlineResponse200 temperature(BigDecimal temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * Temperature in degrees Celcius, with precision 2
   * @return temperature
  **/
  @Schema(example = "16.45", description = "Temperature in degrees Celcius, with precision 2")
  public BigDecimal getTemperature() {
    return temperature;
  }

  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.time, inlineResponse200.time) &&
        Objects.equals(this.temperature, inlineResponse200.temperature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, temperature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
